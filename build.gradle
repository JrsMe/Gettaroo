plugins {
	id 'fabric-loom' version '1.9.2'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

ext {
	minecraft_version = '1.21.1'
	mappings_version = '1.21.1+build.1:v2'
	fabric_loader_version = '0.16.2'
	mod_menu_version = '11.0.1'
	malilib_version = '0.21.0'
	mod_id = 'gettaro'
	mod_name = 'Gettaro'
	mod_file_name = 'gettaro-fabric'
	mod_version = '1.0.0'
	group = 'com.yourname.gettaroo'
	fabric_api_version = '0.105.0+1.21.1' // Versi√≥n de Fabric API
}

repositories {
	maven { url 'https://maven.fabricmc.net' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url 'https://masa.dy.fi/maven' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.mappings_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
	implementation "com.google.code.findbugs:jsr305:3.0.2"
	implementation 'org.joml:joml:1.10.0'
	modImplementation "fi.dy.masa.malilib:malilib-fabric-${project.minecraft_version}:${project.malilib_version}"
	modCompileOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modCompileOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
}

group = project.group + "." + project.mod_id
archivesBaseName = project.mod_file_name + '-' + project.minecraft_version
version = project.mod_version

if (version.endsWith('-dev')) {
	version += "." + new Date().format('yyyyMMdd.HHmmss')
}

processResources {
	exclude '**/*.xcf'
	exclude '**/xcf'

	inputs.property "mod_version", project.mod_version
	filesMatching("fabric.mod.json") {
		expand "mod_version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

tasks.withType(AbstractArchiveTask).configureEach {
	preserveFileTimestamps = true
}
